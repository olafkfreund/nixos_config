{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(nix flake check:*)",
      "Bash(rg:*)",
      "Bash(just status:*)",
      "Bash(chmod:*)",
      "Bash(just efficiency-report)",
      "Bash(just analyze-config:*)",
      "Bash(just test-host:*)",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(just test:*)",
      "Bash(just migrate-host:*)",
      "Bash(rm:*)",
      "Bash(just validate-quick:*)",
      "Bash(mv:*)",
      "Bash(ln:*)",
      "Bash(cp:*)",
      "Bash(echo)",
      "Bash(for host in p620 p510 hp samsung dex5550)",
      "Bash(do rm hosts/$host/nixos/envvar.nix)",
      "Bash(done)",
      "Bash(do rm hosts/$host/nixos/hosts.nix)",
      "Bash(for host in hp samsung dex5550)",
      "Bash(do rm hosts/$host/nixos/screens.nix)",
      "Bash(for host in razer p620 p510 hp samsung dex5550)",
      "Bash(do cp hosts/common/envvar.nix hosts/$host/nixos/)",
      "Bash(do cp:*)",
      "Bash(just check-syntax:*)",
      "Bash(nix-instantiate:*)",
      "Bash(time nix flake check:*)",
      "Bash(touch:*)",
      "Bash(just validate-quality:*)",
      "Bash(./scripts/validate-quality.sh:*)",
      "Bash(timeout 60 nix flake check:*)",
      "Bash(just validate)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(ssh:*)",
      "Bash(nhs)",
      "Bash(systemctl:*)",
      "Bash(cat:*)",
      "Bash(rofi:*)",
      "Bash(mkdir:*)",
      "Bash(home-manager switch:*)",
      "Bash(system-dashboard)",
      "Bash(nix-collect-garbage:*)",
      "Bash(echo $SHELL)",
      "Bash(zsh:*)",
      "Bash(source:*)",
      "Bash(alias ezals)",
      "Bash(alias aiexplain)",
      "Bash(alias reload)",
      "Bash(alias myip)",
      "Bash(starship config get:*)",
      "Bash(tmux-sessionizer:*)",
      "Bash(just p510)",
      "Bash(just:*)",
      "Bash(foot:*)",
      "Bash(zellij:*)",
      "Bash(./scripts/encrypt-api-keys.sh:*)",
      "Bash(./scripts/manual-encrypt.sh:*)",
      "Bash(sudo nixos-rebuild:*)",
      "Bash(api-keys-status)",
      "Bash(sudo ls:*)",
      "Bash(env)",
      "Bash(sudo find /run -name \"api-*\" -type f)",
      "Bash(sudo cat /run/agenix.d/1/api-openai)",
      "WebFetch(domain:wiki.hypr.land)",
      "Bash(diff:*)",
      "Bash(hyprctl:*)",
      "Bash(journalctl:*)",
      "Bash(sudo rmdir:*)",
      "Bash(ping:*)",
      "Bash(sudo systemctl status:*)",
      "Bash(curl:*)",
      "Bash(sudo netstat:*)",
      "Bash(sudo ss:*)",
      "Bash(sudo journalctl:*)",
      "Bash(sudo systemctl cat:*)",
      "Bash(grafana-status:*)",
      "Bash(sudo systemctl restart:*)",
      "Bash(grafana-dashboards:*)",
      "Bash(prometheus-status:*)",
      "Bash(ai-cli --help)",
      "Bash(ai-cli --status)",
      "Bash(readlink:*)",
      "Bash(ai-cli -v \"Hello! What is 2+2?\")",
      "Bash(ai-cli -p anthropic -v \"Hello! What is 2+2?\")",
      "Bash(ai-chat:*)",
      "Bash(ai-cli:*)",
      "Bash(timeout:*)",
      "Bash(./update-claude-code-lock.sh:*)",
      "Bash(nix-env:*)",
      "Bash(nix search:*)",
      "Bash(sgpt:*)",
      "Bash(aichat:*)",
      "Bash(hostname:*)",
      "Bash(chatgpt --help)",
      "Bash(scp:*)",
      "Bash(dig:*)",
      "Bash(rsync:*)",
      "Bash(nslookup:*)",
      "Bash(resolvectl:*)",
      "Bash(sudo resolvectl:*)",
      "Bash(sudo systemctl:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude-code mcp:*)",
      "Bash(dotnet --info)",
      "Bash(sed:*)",
      "Bash(node-exporter-status)",
      "Bash(sudo pkill:*)",
      "Bash(promtail-status:*)",
      "Bash(git rm:*)",
      "Bash(awk:*)",
      "Bash(nh os:*)",
      "Bash(nix-prefetch-url:*)",
      "Bash(nix hash convert:*)",
      "Bash(nix build:*)",
      "Bash(nix log:*)",
      "Bash(tar:*)",
      "Bash(prefetch-npm-deps:*)",
      "Bash(npm install:*)",
      "Bash(result/bin/copilot:*)",
      "Bash(result/bin/codex:*)",
      "Bash(result/bin/claude:*)",
      "Bash(./home/development/claude-code/update-claude-code-lock.sh:*)",
      "Bash(bash:*)",
      "Bash(/nix/store/hz25j36y528hmldx3gh044ih0c2sw0lk-claude-code-2.0.9/bin/claude --version)",
      "Bash(nix flake show:*)",
      "Bash(tee:*)",
      "Bash(sudo rm:*)",
      "Bash(sudo find:*)",
      "Bash(sudo find /tmp -type d -name \"cargo-*\" -exec rm -rf {} +)",
      "Bash(sudo find /tmp -type d -name \"rust*\" -exec rm -rf {} +)",
      "Bash(ps:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(xargs:*)",
      "Bash(sudo du:*)",
      "Bash(TMPDIR=~/nix-build-tmp nh os switch --ask)",
      "Bash(nix-store:*)",
      "Bash(sudo nix-store:*)",
      "Bash(nix flake update:*)",
      "Bash(pgrep:*)",
      "Bash(nix-shell:*)",
      "Bash(result/bin/gemini:*)",
      "Bash(pre-commit install:*)",
      "Bash(python3:*)",
      "Bash(while read f)",
      "Bash(do grep -q \"^#\" \"$f\")",
      "Bash(echo:*)",
      "Bash(docker:*)",
      "Bash(nix flake lock:*)",
      "Bash(for file in hosts/templates/*.nix)",
      "Bash(do sed -i '/\\.\\.\\/\\.\\.\\/modules\\/monitoring\\.nix/d' \"$file\")",
      "Bash(coredumpctl list:*)",
      "Bash(coredumpctl info:*)",
      "Bash(lsusb:*)",
      "Bash(for dev in /sys/bus/usb/devices/*)",
      "Bash(do if [ -f \"$dev/power/control\" ])",
      "Bash(fi)",
      "Bash(bluetoothctl:*)",
      "Bash(/nix/store/ibpqb5xy2h0c4lm82plngbi49jj9h0nl-nixos-system-p620-25.11.20251007.c9b6fb7/bin/switch-to-configuration switch:*)",
      "Bash(for host in p620 p510 razer samsung hp dex5550)",
      "Bash(do echo \"=== $host ===\")",
      "Bash(git log:*)",
      "Bash(git reset:*)",
      "Bash(npm view:*)",
      "Bash(nix hash to-sri:*)",
      "Bash(if [ -f package-lock.json ])",
      "Bash(then echo \"✅ package-lock.json exists\")",
      "Bash(else echo \"❌ No package-lock.json found\")",
      "Bash(nix-prefetch-git:*)",
      "Bash(git clone:*)"
    ],
    "additionalDirectories": ["/"]
  },
  "enableAllProjectMcpServers": false
}
